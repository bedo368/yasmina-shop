{"ast":null,"code":"var _jsxFileName = \"/mnt/d/react&bac/mern-shop/frontend/src/pages/ProfilePage/ProfilePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../../components/message/Message\";\nimport Loader from \"../../components/loader/Loader\";\nimport { getUserProfile, updateUserProfile } from \"../../redux/user/userProfile/userProfileAction\";\n\nconst ProfilePage = ({\n  location,\n  history\n}) => {\n  const dispatch = useDispatch();\n  const {\n    userInfo\n  } = useSelector(state => state.userReducer);\n  const {\n    userProfileInfo,\n    getUserProlieFetchState,\n    userProfileErrorMessage\n  } = useSelector(state => state.userProfileReducer);\n  const [editProfile, setEditProfile] = useState(false);\n  const [userInfoInput, setUserInfo] = useState({\n    email: \"\",\n    newPassword: \"\",\n    name: \"\",\n    oldPassword: \"\"\n  });\n  const {\n    email,\n    newPassword,\n    name,\n    oldPassword\n  } = userInfoInput;\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  const userInfoChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserInfo(preval => {\n      return { ...preval,\n        [name]: value\n      };\n    });\n  };\n\n  useEffect(() => {\n    if (!(userProfileInfo === null || userProfileInfo === void 0 ? void 0 : userProfileInfo.name)) {\n      if (userInfo) {\n        dispatch(getUserProfile());\n      }\n    } else {\n      setUserInfo(preval => ({ ...preval,\n        email: userProfileInfo.email,\n        name: userProfileInfo.name\n      }));\n    }\n  }, [userInfo, userProfileInfo, dispatch, ProfilePage]);\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    dispatch(updateUserProfile(name, email, newPassword, oldPassword));\n    setEditProfile(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default ProfilePage;","map":{"version":3,"sources":["/mnt/d/react&bac/mern-shop/frontend/src/pages/ProfilePage/ProfilePage.js"],"names":["React","useState","useEffect","Button","Col","Form","Row","useDispatch","useSelector","Message","Loader","getUserProfile","updateUserProfile","ProfilePage","location","history","dispatch","userInfo","state","userReducer","userProfileInfo","getUserProlieFetchState","userProfileErrorMessage","userProfileReducer","editProfile","setEditProfile","userInfoInput","setUserInfo","email","newPassword","name","oldPassword","redirect","search","split","userInfoChange","event","value","target","preval","push","submitHandler","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Button, Col, Form, Row } from \"react-bootstrap\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Message from \"../../components/message/Message\"\nimport Loader from \"../../components/loader/Loader\"\nimport {\n  getUserProfile,\n  updateUserProfile,\n} from \"../../redux/user/userProfile/userProfileAction\"\nconst ProfilePage = ({ location, history }) => {\n  const dispatch = useDispatch()\n  const { userInfo } = useSelector((state) => state.userReducer)\n  const {\n    userProfileInfo,\n    getUserProlieFetchState,\n    userProfileErrorMessage,\n  } = useSelector((state) => state.userProfileReducer)\n\n  const [editProfile, setEditProfile] = useState(false)\n  const [userInfoInput, setUserInfo] = useState({\n    email: \"\",\n    newPassword: \"\",\n    name: \"\",\n    oldPassword: \"\",\n  })\n  const { email, newPassword, name, oldPassword } = userInfoInput\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"\n\n  const userInfoChange = (event) => {\n    const { name, value } = event.target\n    setUserInfo((preval) => {\n      return { ...preval, [name]: value }\n    })\n  }\n  useEffect(() => {\n    if (!userProfileInfo?.name) {\n      if (userInfo) {\n        dispatch(getUserProfile())\n      }\n    } else {\n      setUserInfo((preval) => ({\n        ...preval,\n        email: userProfileInfo.email,\n        name: userProfileInfo.name,\n      }))\n    }\n  }, [userInfo, userProfileInfo, dispatch, ProfilePage])\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo])\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n    dispatch(updateUserProfile(name, email, newPassword, oldPassword))\n    setEditProfile(false)\n  }\n  return (\n    <div>\n\n    </div>\n      \n    \n  )\n}\n\nexport default ProfilePage\n"]},"metadata":{},"sourceType":"module"}