{"ast":null,"code":"import cartTypes from \"./cartTypes\";\nimport { addItemUtalits } from \"./cartUtalits\";\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst intialState = {\n  cartItems: cartItemsFromStorage\n};\n\nconst cartReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case cartTypes.CART_ADD_ITEM:\n      return addItemUtalits(state, action);\n      break;\n\n    case cartTypes.CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(item => item._id !== action.payload)\n      };\n\n    case cartTypes.SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingAddress: action.pa\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/mnt/d/react&bac/mern-shop/frontend/src/redux/cart/cartReducer.js"],"names":["cartTypes","addItemUtalits","cartItemsFromStorage","localStorage","getItem","JSON","parse","intialState","cartItems","cartReducer","state","action","type","CART_ADD_ITEM","CART_REMOVE_ITEM","filter","item","_id","payload","SAVE_SHIPPING_ADDRESS","shippingAddress","pa"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAmF,EAAhH;AACA,MAAMG,WAAW,GAAG;AAClBC,EAAAA,SAAS,EAAEN;AADO,CAApB;;AAGA,MAAMO,WAAW,GAAG,CAACC,KAAK,GAAGH,WAAT,EAAsBI,MAAtB,KAAiC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,SAAS,CAACa,aAAf;AACE,aAAOZ,cAAc,CAACS,KAAD,EAASC,MAAT,CAArB;AACA;;AACF,SAAKX,SAAS,CAACc,gBAAf;AACI,aAAO,EAAC,GAAGJ,KAAJ;AAAYF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBO,MAAhB,CAAuBC,IAAI,IAAEA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACO,OAAjD;AAAvB,OAAP;;AACJ,SAAKlB,SAAS,CAACmB,qBAAf;AACA,aAAM,EAAE,GAAGT,KAAL;AAAaU,QAAAA,eAAe,EAAGT,MAAM,CAACU;AAAtC,OAAN;;AACA;AACE,aAAOX,KAAP;AATJ;AAWD,CAZD;;AAcA,eAAeD,WAAf","sourcesContent":["import cartTypes from \"./cartTypes\"\nimport {addItemUtalits} from \"./cartUtalits\"\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")): []\nconst intialState = {\n  cartItems: cartItemsFromStorage,\n}\nconst cartReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case cartTypes.CART_ADD_ITEM:\n      return addItemUtalits(state , action)\n      break\n    case cartTypes.CART_REMOVE_ITEM:\n        return {...state , cartItems: state.cartItems.filter(item=>item._id !== action.payload)}\n    case cartTypes.SAVE_SHIPPING_ADDRESS : \n    return{ ...state , shippingAddress : action.pa}\n    default:\n      return state\n  }\n}\n\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}