{"ast":null,"code":"import cartTypes from \"./cartTypes\";\nimport { addItemUtalits } from \"./cartUtalits\";\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : null;\nconst intialState = {\n  cartItems: cartItemsFromStorage,\n  shippingAddress: shippingAddressFromStorage\n};\n\nconst cartReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case cartTypes.CART_ADD_ITEM:\n      return addItemUtalits(state, action);\n      break;\n\n    case cartTypes.CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(item => item._id !== action.payload)\n      };\n\n    case cartTypes.SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingAddress: action.payload\n      };\n\n    case cartTypes.SAVE_PAYMENT_METHOD:\n      return { ...state,\n        paymentMethode: action.pa\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/mnt/d/react&bac/mern-shop/frontend/src/redux/cart/cartReducer.js"],"names":["cartTypes","addItemUtalits","cartItemsFromStorage","localStorage","getItem","JSON","parse","shippingAddressFromStorage","intialState","cartItems","shippingAddress","cartReducer","state","action","type","CART_ADD_ITEM","CART_REMOVE_ITEM","filter","item","_id","payload","SAVE_SHIPPING_ADDRESS","SAVE_PAYMENT_METHOD","paymentMethode","pa"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAGA,MAAMG,0BAA0B,GAAGJ,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,IAFJ;AAGA,MAAMI,WAAW,GAAG;AAClBC,EAAAA,SAAS,EAAEP,oBADO;AAElBQ,EAAAA,eAAe,EAAEH;AAFC,CAApB;;AAIA,MAAMI,WAAW,GAAG,CAACC,KAAK,GAAGJ,WAAT,EAAsBK,MAAtB,KAAiC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,SAAS,CAACe,aAAf;AACE,aAAOd,cAAc,CAACW,KAAD,EAAQC,MAAR,CAArB;AACA;;AACF,SAAKb,SAAS,CAACgB,gBAAf;AACE,aAAO,EACL,GAAGJ,KADE;AAELH,QAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBQ,MAAhB,CAAwBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACO,OAArD;AAFN,OAAP;;AAIF,SAAKpB,SAAS,CAACqB,qBAAf;AACE,aAAO,EAAE,GAAGT,KAAL;AAAYF,QAAAA,eAAe,EAAEG,MAAM,CAACO;AAApC,OAAP;;AACF,SAAKpB,SAAS,CAACsB,mBAAf;AACE,aAAO,EAAE,GAAGV,KAAL;AAAaW,QAAAA,cAAc,EAAGV,MAAM,CAACW;AAArC,OAAP;;AACF;AACE,aAAOZ,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,WAAf","sourcesContent":["import cartTypes from \"./cartTypes\"\nimport { addItemUtalits } from \"./cartUtalits\"\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : []\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : null\nconst intialState = {\n  cartItems: cartItemsFromStorage,\n  shippingAddress: shippingAddressFromStorage,\n}\nconst cartReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case cartTypes.CART_ADD_ITEM:\n      return addItemUtalits(state, action)\n      break\n    case cartTypes.CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((item) => item._id !== action.payload),\n      }\n    case cartTypes.SAVE_SHIPPING_ADDRESS:\n      return { ...state, shippingAddress: action.payload }\n    case cartTypes.SAVE_PAYMENT_METHOD :\n      return { ...state , paymentMethode : action.pa}\n    default:\n      return state\n  }\n}\n\nexport default cartReducer\n"]},"metadata":{},"sourceType":"module"}