{"ast":null,"code":"import userProfilTypes from \"./userProfileTypes\";\nimport Axios from \"axios\";\nexport const getUserProfile = () => async (dispatch, getState) => {\n  try {\n    const token = getState().userReducer.userInfo.token;\n    dispatch({\n      type: userProfilTypes.USER_GET_PROFILE_START\n    });\n    const query = `\n        query{\n            getUserProfile{\n                name\n                email\n                isAdmin\n            }\n        }\n      `;\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: \"/graphql\",\n      data: {\n        query\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch({\n      type: userProfilTypes.USER_GET_PROFILE_SUCCESS,\n      payload: data.data.getUserProfile\n    });\n  } catch (error) {\n    const errorMessage = error.response.data.message ? error.response.data.message : \"error happend\";\n    dispatch({\n      type: userProfilTypes.USER_GET_PROFILE_FAIL,\n      payload: errorMessage\n    });\n  }\n};","map":{"version":3,"sources":["/mnt/d/react&bac/mern-shop/frontend/src/redux/user/userProfile/userProfileAction.js"],"names":["userProfilTypes","Axios","getUserProfile","dispatch","getState","token","userReducer","userInfo","type","USER_GET_PROFILE_START","query","data","method","url","headers","Authorization","USER_GET_PROFILE_SUCCESS","payload","error","errorMessage","response","message","USER_GET_PROFILE_FAIL"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC9D,MAAI;AAEF,UAAMC,KAAK,GAAGD,QAAQ,GAAGE,WAAX,CAAuBC,QAAvB,CAAgCF,KAA9C;AACAF,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAER,eAAe,CAACS;AADf,KAAD,CAAR;AAGA,UAAMC,KAAK,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OARM;AASA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAAC;AAC3BW,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,GAAG,EAAE,UAFsB;AAG3BF,MAAAA,IAAI,EAAG;AACHD,QAAAA;AADG,OAHoB;AAM3BI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAI,UAASV,KAAM;AAFzB;AANkB,KAAD,CAA5B;AAWAF,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAER,eAAe,CAACgB,wBADf;AAEPC,MAAAA,OAAO,EAAEN,IAAI,CAACA,IAAL,CAAUT;AAFZ,KAAD,CAAR;AAID,GA9BD,CA8BE,OAAOgB,KAAP,EAAc;AACd,UAAMC,YAAY,GAAGD,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBU,OAApB,GACjBH,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBU,OADH,GAEjB,eAFJ;AAGAlB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAER,eAAe,CAACsB,qBADf;AAEPL,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAxCI","sourcesContent":["import userProfilTypes from \"./userProfileTypes\"\nimport Axios from \"axios\"\nexport const getUserProfile = () => async (dispatch, getState) => {\n    try {\n  \n      const token = getState().userReducer.userInfo.token\n      dispatch({\n        type: userProfilTypes.USER_GET_PROFILE_START,\n      })\n      const query = `\n        query{\n            getUserProfile{\n                name\n                email\n                isAdmin\n            }\n        }\n      `\n      const { data } = await Axios({\n        method: \"POST\",\n        url: \"/graphql\",\n        data : {\n            query \n        } ,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization : `Bearer ${token}`\n        },\n      })\n      dispatch({\n        type: userProfilTypes.USER_GET_PROFILE_SUCCESS,\n        payload: data.data.getUserProfile,\n      })\n    } catch (error) {\n      const errorMessage = error.response.data.message\n        ? error.response.data.message\n        : \"error happend\"\n      dispatch({\n        type: userProfilTypes.USER_GET_PROFILE_FAIL,\n        payload: errorMessage,\n      })\n    }\n  }"]},"metadata":{},"sourceType":"module"}