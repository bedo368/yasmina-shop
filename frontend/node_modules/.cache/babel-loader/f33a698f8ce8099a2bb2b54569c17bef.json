{"ast":null,"code":"import productTypes from \"./productsTypes\";\n\nconst fitchProductStart = () => {\n  return {\n    type: productTypes.FETCH_PRODUCT_START\n  };\n};\n\nconst fitchProductSuccess = products => {\n  return {\n    type: productTypes.FETCH_PRODUCT_SUCCESS,\n    payload: products\n  };\n};\n\nconst fitchProductfail = error => {\n  return {\n    type: productTypes.FETCH_PRODUCT_START,\n    payload: error\n  };\n};\n\nexport const fetchProductsAscync = () => {\n  return dispatch => {\n    dispatch(fitchProductStart());\n    const query = `\n     query{\n       getAllProducts {\n         _id\n         name\n         image\n         brand\n         price\n         rating\n         numReviews\n         category\n         description\n         countInStock\n         \n         \n       }\n     }\n     `;\n    axios({\n      method: \"POST\",\n      data: {\n        query\n      },\n      url: \"/graphql\"\n    }).then(res => {\n      dispatch(fitchProductSuccess(res.data.data.getAllProducts));\n    }).catch(errot => {\n      dispatch(fitchProductfail(res.data.data.getAllProducts));\n    });\n  };\n};","map":{"version":3,"sources":["/mnt/d/react&bac/mern-shop/frontend/src/redux/products/productsAction.js"],"names":["productTypes","fitchProductStart","type","FETCH_PRODUCT_START","fitchProductSuccess","products","FETCH_PRODUCT_SUCCESS","payload","fitchProductfail","error","fetchProductsAscync","dispatch","query","axios","method","data","url","then","res","getAllProducts","catch","errot"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,iBAAzB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEF,YAAY,CAACG;AADd,GAAP;AAGD,CAJD;;AAKA,MAAMC,mBAAmB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACLH,IAAAA,IAAI,EAAEF,YAAY,CAACM,qBADd;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAMA,MAAMG,gBAAgB,GAAIC,KAAD,IAAW;AAClC,SAAO;AACLP,IAAAA,IAAI,EAAEF,YAAY,CAACG,mBADd;AAELI,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACV,iBAAiB,EAAlB,CAAR;AACA,UAAMW,KAAK,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAjBI;AAkBAC,IAAAA,KAAK,CAAC;AACJC,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,IAAI,EAAE;AACJH,QAAAA;AADI,OAFF;AAKJI,MAAAA,GAAG,EAAE;AALD,KAAD,CAAL,CAOGC,IAPH,CAOSC,GAAD,IAAS;AACbP,MAAAA,QAAQ,CAACP,mBAAmB,CAACc,GAAG,CAACH,IAAJ,CAASA,IAAT,CAAcI,cAAf,CAApB,CAAR;AACD,KATH,EAUGC,KAVH,CAUUC,KAAD,IAAW;AAChBV,MAAAA,QAAQ,CAACH,gBAAgB,CAACU,GAAG,CAACH,IAAJ,CAASA,IAAT,CAAcI,cAAf,CAAjB,CAAR;AACD,KAZH;AAaD,GAjCD;AAkCD,CAnCM","sourcesContent":["import productTypes from \"./productsTypes\"\n\nconst fitchProductStart = () => {\n  return {\n    type: productTypes.FETCH_PRODUCT_START,\n  }\n}\nconst fitchProductSuccess = (products) => {\n  return {\n    type: productTypes.FETCH_PRODUCT_SUCCESS,\n    payload: products,\n  }\n}\nconst fitchProductfail = (error) => {\n  return {\n    type: productTypes.FETCH_PRODUCT_START,\n    payload: error,\n  }\n}\n\nexport const fetchProductsAscync = () => {\n  return (dispatch) => {\n    dispatch(fitchProductStart())\n    const query = `\n     query{\n       getAllProducts {\n         _id\n         name\n         image\n         brand\n         price\n         rating\n         numReviews\n         category\n         description\n         countInStock\n         \n         \n       }\n     }\n     `\n    axios({\n      method: \"POST\",\n      data: {\n        query,\n      },\n      url: \"/graphql\",\n    })\n      .then((res) => {\n        dispatch(fitchProductSuccess(res.data.data.getAllProducts))\n      })\n      .catch((errot) => {\n        dispatch(fitchProductfail(res.data.data.getAllProducts))\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}