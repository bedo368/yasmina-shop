{"ast":null,"code":"import adminTypes from \"./adminTypes\";\nexport const getUsersForAdmin = () => async (dispatch, getState) => {\n  try {\n    const token = getState().userReducer.userInfo.token;\n    dispatch({\n      type: adminTypes.GET_USER_LIST_START\n    });\n    const query = `\n          query{\n            getAllUsersForAdmin{\n                  _id\n                  name\n                  email\n                  isAdmin\n              }\n          }\n        `;\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: \"/graphql\",\n      data: {\n        query\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch({\n      type: adminTypes.GET_USER_LIST_SUCCESS,\n      payload: data.data.getAllUsersForAdmin\n    });\n  } catch (error) {\n    const errorMessage = error.response.data.errors ? error.response.data.errors[0].message : error.response.data;\n    dispatch({\n      type: adminTypes.GET_USER_LIST_FAIL,\n      payload: errorMessage\n    });\n  }\n};","map":{"version":3,"sources":["/mnt/d/react&bac/mern-shop/frontend/src/redux/user/admin/adminAction.js"],"names":["adminTypes","getUsersForAdmin","dispatch","getState","token","userReducer","userInfo","type","GET_USER_LIST_START","query","data","Axios","method","url","headers","Authorization","GET_USER_LIST_SUCCESS","payload","getAllUsersForAdmin","error","errorMessage","response","errors","message","GET_USER_LIST_FAIL"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAI;AACF,UAAMC,KAAK,GAAGD,QAAQ,GAAGE,WAAX,CAAuBC,QAAvB,CAAgCF,KAA9C;AACAF,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAACP,UAAU,CAACQ;AADT,KAAD,CAAR;AAGA,UAAMC,KAAK,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SATM;AAUA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMC,KAAK,CAAC;AAC3BC,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,GAAG,EAAE,UAFsB;AAG3BH,MAAAA,IAAI,EAAE;AACJD,QAAAA;AADI,OAHqB;AAM3BK,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASX,KAAM;AAFxB;AANkB,KAAD,CAA5B;AAWAF,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAACP,UAAU,CAACgB,qBADT;AAEPC,MAAAA,OAAO,EAAEP,IAAI,CAACA,IAAL,CAAUQ;AAFZ,KAAD,CAAR;AAID,GA9BD,CA8BE,OAAOC,KAAP,EAAc;AACd,UAAMC,YAAY,GAAGD,KAAK,CAACE,QAAN,CAAeX,IAAf,CAAoBY,MAApB,GACjBH,KAAK,CAACE,QAAN,CAAeX,IAAf,CAAoBY,MAApB,CAA2B,CAA3B,EAA8BC,OADb,GAEjBJ,KAAK,CAACE,QAAN,CAAeX,IAFnB;AAGAR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAACP,UAAU,CAACwB,kBADT;AAEPP,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAID;AACF,CAxCI","sourcesContent":["import adminTypes from \"./adminTypes\"\n\nexport const getUsersForAdmin = () => async (dispatch, getState) => {\n    try {\n      const token = getState().userReducer.userInfo.token\n      dispatch({\n        type:adminTypes.GET_USER_LIST_START ,\n      })\n      const query = `\n          query{\n            getAllUsersForAdmin{\n                  _id\n                  name\n                  email\n                  isAdmin\n              }\n          }\n        `\n      const { data } = await Axios({\n        method: \"POST\",\n        url: \"/graphql\",\n        data: {\n          query,\n        },\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      dispatch({\n        type:adminTypes.GET_USER_LIST_SUCCESS ,\n        payload: data.data.getAllUsersForAdmin,\n      })\n    } catch (error) {\n      const errorMessage = error.response.data.errors\n        ? error.response.data.errors[0].message\n        : error.response.data\n      dispatch({\n        type:adminTypes.GET_USER_LIST_FAIL ,\n        payload: errorMessage,\n      })\n    }\n  }\n  \n  "]},"metadata":{},"sourceType":"module"}