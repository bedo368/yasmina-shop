{"ast":null,"code":"var _jsxFileName = \"/mnt/d/react&bac/mern-shop/frontend/src/pages/ProfilePage/ProfilePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../../components/message/Message\";\nimport Loader from \"../../components/loader/Loader\";\n\nconst ProfilePage = ({\n  location,\n  history\n}) => {\n  const dispatch = useDispatch();\n  const {\n    userInfo,\n    errorMassage,\n    fetchState\n  } = useSelector(state => state.userReducer);\n  const [userInfoInput, setUserInfo] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    confirmPassword: \"\"\n  });\n  const [message, setMessage] = useState(null);\n  const {\n    email,\n    password,\n    name,\n    confirmPassword\n  } = userInfoInput;\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  const userInfoChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserInfo(preval => {\n      return { ...preval,\n        [name]: value\n      };\n    });\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(redirect);\n    }\n  }, [history, redirect]);\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage(\"password did't match \");\n      return;\n    }\n\n    setMessage(null);\n  };\n\n  return /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default ProfilePage;","map":{"version":3,"sources":["/mnt/d/react&bac/mern-shop/frontend/src/pages/ProfilePage/ProfilePage.js"],"names":["React","useState","useEffect","Button","Col","Form","Row","Link","useDispatch","useSelector","Message","Loader","ProfilePage","location","history","dispatch","userInfo","errorMassage","fetchState","state","userReducer","userInfoInput","setUserInfo","email","password","name","confirmPassword","message","setMessage","redirect","search","split","userInfoChange","event","value","target","preval","push","submitHandler","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAIA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAC7C,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAyCT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAA1D;AACA,QAAM,CAACC,aAAD,EAAgBC,WAAhB,IAA+BrB,QAAQ,CAAC;AAC5CsB,IAAAA,KAAK,EAAE,EADqC;AAE5CC,IAAAA,QAAQ,EAAE,EAFkC;AAG5CC,IAAAA,IAAI,EAAE,EAHsC;AAI5CC,IAAAA,eAAe,EAAE;AAJ2B,GAAD,CAA7C;AAMA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEsB,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA;AAAzB,MAA6CL,aAAnD;AACA,QAAMQ,QAAQ,GAAGhB,QAAQ,CAACiB,MAAT,GAAkBjB,QAAQ,CAACiB,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAlB,GAAkD,GAAnE;;AAEA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,UAAM;AAAER,MAAAA,IAAF;AAAQS,MAAAA;AAAR,QAAkBD,KAAK,CAACE,MAA9B;AACAb,IAAAA,WAAW,CAAEc,MAAD,IAAY;AACtB,aAAO,EAAE,GAAGA,MAAL;AAAa,SAACX,IAAD,GAAQS;AAArB,OAAP;AACD,KAFU,CAAX;AAGD,GALD;;AAMAhC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACc,QAAL,EAAe;AACbF,MAAAA,OAAO,CAACuB,IAAR,CAAaR,QAAb;AACD;AACF,GAJQ,EAIN,CAACf,OAAD,EAAUe,QAAV,CAJM,CAAT;;AAKA,QAAMS,aAAa,GAAIL,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACM,cAAN;;AACA,QAAIf,QAAQ,KAAKE,eAAjB,EAAkC;AAChCE,MAAAA,UAAU,CAAC,uBAAD,CAAV;AACA;AACD;;AACDA,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAPD;;AAQA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AASD,CAzCD;;AA2CA,eAAehB,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Button, Col, Form, Row } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Message from \"../../components/message/Message\"\nimport Loader from \"../../components/loader/Loader\"\n \n\n\nconst ProfilePage = ({ location, history }) => {\n  const dispatch = useDispatch()\n  const { userInfo, errorMassage, fetchState } = useSelector((state) => state.userReducer)\n  const [userInfoInput, setUserInfo] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    confirmPassword: \"\",\n  })\n  const [message, setMessage] = useState(null)\n  const { email, password, name, confirmPassword } = userInfoInput\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"\n\n  const userInfoChange = (event) => {\n    const { name, value } = event.target\n    setUserInfo((preval) => {\n      return { ...preval, [name]: value }\n    })\n  }\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(redirect)\n    }\n  }, [history, redirect])\n  const submitHandler = (event) => {\n    event.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage(\"password did't match \")\n      return\n    }\n    setMessage(null)\n  }\n  return (\n    <Col>\n    <Row>\n      \n\n    </Row>\n      \n    </Col>\n  )\n}\n\nexport default ProfilePage\n"]},"metadata":{},"sourceType":"module"}