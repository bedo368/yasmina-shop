{"ast":null,"code":"import userTypes from \"./userTypes\";\nimport Axios from \"axios\";\nexport const login = (email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: userTypes.USER_LOGIN_START\n    });\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: \"/login\",\n      data: {\n        email,\n        password\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: userTypes.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const errorMessage = error.response.data.message ? error.response.data.message : \"error happend\";\n    dispatch({\n      type: userTypes.USER_LOGIN_FAIL,\n      payload: errorMessage\n    });\n    localStorage.setItem(\"userInfo\", null);\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: userTypes.LOGOUT\n  });\n  dispatch({\n    type: \"USER_PROFILE_RESET\"\n  });\n  localStorage.setItem(\"userInfo\", null);\n  dispatch({\n    type: \"REST_ADMIN\"\n  });\n};\nexport const register = (name, email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: userTypes.USER_REGISTER_START\n    });\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: \"/register\",\n      data: {\n        email,\n        password,\n        name\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: userTypes.USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const errorMessage = error.response.data.message ? error.response.data.message : \"error happend\";\n    dispatch({\n      type: userTypes.USER_REGISTER_FAIL,\n      payload: errorMessage\n    });\n    localStorage.setItem(\"userInfo\", null);\n  }\n};\nexport const checkForToken = () => async (dispatch, getState) => {\n  var _getState$userReducer, _getState$userReducer2;\n\n  console.log(\"ff\");\n  console.log((_getState$userReducer = getState().userReducer.userInfo) === null || _getState$userReducer === void 0 ? void 0 : _getState$userReducer.token);\n  const token = (_getState$userReducer2 = getState().userReducer.userInfo) === null || _getState$userReducer2 === void 0 ? void 0 : _getState$userReducer2.token;\n  Axios({\n    method: \"POST\",\n    url: \"/checktoken\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(data => {\n    dispatch({\n      type: userTypes.USER_REGISTER_SUCCESS,\n      payload: data.data\n    });\n  }).catch(error => {\n    const errorMessage = error.response.data.message ? error.response.data.message : \"error happend\";\n    dispatch({\n      type: userTypes.LOGOUT\n    });\n    localStorage.setItem(\"userInfo\", null);\n  });\n};","map":{"version":3,"sources":["/media/bedo/E864D0B864D08B28/react&bac/mern-shop/frontend/src/redux/user/userAction.js"],"names":["userTypes","Axios","login","email","password","dispatch","getState","type","USER_LOGIN_START","data","method","url","headers","USER_LOGIN_SUCCESS","payload","localStorage","setItem","JSON","stringify","error","errorMessage","response","message","USER_LOGIN_FAIL","logout","LOGOUT","register","name","USER_REGISTER_START","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","checkForToken","console","log","userReducer","userInfo","token","Authorization","then","catch"],"mappings":"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","sourcesContent":["import userTypes from \"./userTypes\"\nimport Axios from \"axios\"\n\nexport const login = (email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: userTypes.USER_LOGIN_START,\n    })\n    const { data } = await Axios({\n      method: \"POST\",\n      url: \"/login\",\n      data: {\n        email,\n        password,\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    dispatch({\n      type: userTypes.USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem(\"userInfo\", JSON.stringify(data))\n  } catch (error) {\n    const errorMessage = error.response.data.message\n      ? error.response.data.message\n      : \"error happend\"\n    dispatch({\n      type: userTypes.USER_LOGIN_FAIL,\n      payload: errorMessage,\n    })\n    localStorage.setItem(\"userInfo\", null)\n  }\n}\n\n\n\nexport const logout = () => (dispatch) => {\n  dispatch({\n    type: userTypes.LOGOUT,\n  })\n  dispatch({type :\"USER_PROFILE_RESET\"})\n  localStorage.setItem(\"userInfo\", null)\n  dispatch({type :\"REST_ADMIN\"})\n}\n\nexport const register = (name, email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: userTypes.USER_REGISTER_START,\n    })\n    const { data } = await Axios({\n      method: \"POST\",\n      url: \"/register\",\n      data: {\n        email,\n        password,\n        name,\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    dispatch({\n      type: userTypes.USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem(\"userInfo\", JSON.stringify(data))\n  } catch (error) {\n    const errorMessage = error.response.data.message\n      ? error.response.data.message\n      : \"error happend\"\n    dispatch({\n      type: userTypes.USER_REGISTER_FAIL,\n      payload: errorMessage,\n    })\n    localStorage.setItem(\"userInfo\", null)\n  }\n}\n\n\n\nexport const checkForToken = () => async (dispatch , getState) => {\n  console.log(\"ff\");\n  console.log(getState().userReducer.userInfo?.token);\n  const token = getState().userReducer.userInfo?.token \n    Axios({\n      method: \"POST\",\n      url: \"/checktoken\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((data)=>{\n      \n      dispatch({\n        type: userTypes.USER_REGISTER_SUCCESS,\n        payload: data.data,\n      })\n    }).catch((error)=>{\n      const errorMessage = error.response.data.message\n      ? error.response.data.message\n      : \"error happend\"\n    dispatch({\n      type: userTypes.LOGOUT,\n    })\n    localStorage.setItem(\"userInfo\", null)\n\n    })\n\n  \n    \n\n}\n\n"]},"metadata":{},"sourceType":"module"}