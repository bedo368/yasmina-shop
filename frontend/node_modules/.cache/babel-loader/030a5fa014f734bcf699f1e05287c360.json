{"ast":null,"code":"var _jsxFileName = \"/mnt/d/react&bac/mern-shop/frontend/src/pages/usersPage/UsersListPage.js\";\nimport React, { useEffect } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/loader/Loader\";\nimport Message from \"../../components/message/Message\";\nimport { getUsersForAdmin, removeUserFromUsersList } from \"../../redux/user/admin/adminAction\";\n\nconst UsersListPage = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const {\n    usersList,\n    usersFetchState,\n    usersListErrorMessage,\n    deleteUserErrorMessage\n  } = useSelector(state => state.adminReducer);\n  const {\n    userInfo\n  } = useSelector(state => state.userReducer);\n\n  const deleteHandler = userId => {\n    dispatch(removeUserFromUsersList(userId));\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n\n    if (userInfo) {\n      dispatch(getUsersForAdmin());\n    }\n  }, [dispatch, userInfo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"users\"), usersFetchState ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }) : usersListErrorMessage ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, usersListErrorMessage) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default UsersListPage;","map":{"version":3,"sources":["/mnt/d/react&bac/mern-shop/frontend/src/pages/usersPage/UsersListPage.js"],"names":["React","useEffect","Button","Table","useDispatch","useSelector","Loader","Message","getUsersForAdmin","removeUserFromUsersList","UsersListPage","history","dispatch","usersList","usersFetchState","usersListErrorMessage","deleteUserErrorMessage","state","adminReducer","userInfo","userReducer","deleteHandler","userId","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,gBAAT,EAA2BC,uBAA3B,QAA0D,oCAA1D;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACrC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA,SAAF;AAAaC,IAAAA,eAAb;AAA8BC,IAAAA,qBAA9B;AAAqDC,IAAAA;AAArD,MAA+EX,WAAW,CAC7FY,KAAD,IAAWA,KAAK,CAACC,YAD6E,CAAhG;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAed,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACG,WAAlB,CAAhC;;AAEA,QAAMC,aAAa,GAAIC,MAAD,IAAY;AAChCV,IAAAA,QAAQ,CAACH,uBAAuB,CAACa,MAAD,CAAxB,CAAR;AACD,GAFD;;AAGArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACkB,QAAL,EAAe;AACbR,MAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACD;;AACD,QAAIJ,QAAJ,EAAc;AACZP,MAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACD;AACF,GAPQ,EAON,CAACI,QAAD,EAAWO,QAAX,CAPM,CAAT;AAQA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGL,eAAe,gBACd,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,GAEZC,qBAAqB,gBACvB,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,qBAA3B,CADuB,gBAGvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADF;AAeD,CAjCD;;AAmCA,eAAeL,aAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport { Button, Table } from \"react-bootstrap\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Loader from \"../../components/loader/Loader\"\nimport Message from \"../../components/message/Message\"\nimport { getUsersForAdmin, removeUserFromUsersList } from \"../../redux/user/admin/adminAction\"\n\nconst UsersListPage = ({ history }) => {\n  const dispatch = useDispatch()\n  const { usersList, usersFetchState, usersListErrorMessage ,deleteUserErrorMessage} = useSelector(\n    (state) => state.adminReducer\n  )\n  const { userInfo } = useSelector((state) => state.userReducer)\n\n  const deleteHandler = (userId) => {\n    dispatch(removeUserFromUsersList(userId))\n  }\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\")\n    }\n    if (userInfo) {\n      dispatch(getUsersForAdmin())\n    }\n  }, [dispatch, userInfo])\n  return (\n    <>\n      <h1>users</h1>\n      {usersFetchState ? (\n        <Loader />\n      ) : usersListErrorMessage ? (\n        <Message variant=\"danger\">{usersListErrorMessage}</Message>\n      ) : (\n        <div>\n\n        </div>\n        \n      )}\n    </>\n  )\n}\n\nexport default UsersListPage\n"]},"metadata":{},"sourceType":"module"}