{"ast":null,"code":"import userTypes from \"./userTypes\";\nimport Axios from \"axios\";\nexport const login = (email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: userTypes.USER_LOGIN_START\n    });\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: \"/login\",\n      data: {\n        email,\n        password\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: userTypes.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const errorMessage = error.response.data.message ? error.response.data.message : \"error happend\";\n    dispatch({\n      type: userTypes.USER_LOGIN_FAIL,\n      payload: errorMessage\n    });\n    localStorage.setItem(\"userInfo\", null);\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: userTypes.LOGOUT\n  });\n  localStorage.setItem(\"userInfo\", null);\n};\nexport const register = (name, email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: userTypes.USER_REGISTER_START\n    });\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: \"/register\",\n      data: {\n        email,\n        password,\n        name\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: userTypes.USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const errorMessage = error.response.data.message ? error.response.data.message : \"error happend\";\n    dispatch({\n      type: userTypes.USER_REGISTER_FAIL,\n      payload: errorMessage\n    });\n    localStorage.setItem(\"userInfo\", null);\n  }\n};\nexport const getUserProfile = () => async (dispatch, getState) => {\n  try {\n    const token = getState().userReducer.userInfo.token;\n    dispatch({\n      type: userTypes.U\n    });\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: \"/login\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authriztion: `Bearer ${token}`\n      }\n    });\n    dispatch({\n      type: userTypes.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const errorMessage = error.response.data.message ? error.response.data.message : \"error happend\";\n    dispatch({\n      type: userTypes.USER_LOGIN_FAIL,\n      payload: errorMessage\n    });\n    localStorage.setItem(\"userInfo\", null);\n  }\n};","map":{"version":3,"sources":["/mnt/d/react&bac/mern-shop/frontend/src/redux/user/userAction.js"],"names":["userTypes","Axios","login","email","password","dispatch","getState","type","USER_LOGIN_START","data","method","url","headers","USER_LOGIN_SUCCESS","payload","localStorage","setItem","JSON","stringify","error","errorMessage","response","message","USER_LOGIN_FAIL","logout","LOGOUT","register","name","USER_REGISTER_START","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","getUserProfile","token","userReducer","userInfo","U","Authriztion"],"mappings":"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","sourcesContent":["import userTypes from \"./userTypes\"\nimport Axios from \"axios\"\n\nexport const login = (email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: userTypes.USER_LOGIN_START,\n    })\n    const { data } = await Axios({\n      method: \"POST\",\n      url: \"/login\",\n      data: {\n        email,\n        password,\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    dispatch({\n      type: userTypes.USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem(\"userInfo\", JSON.stringify(data))\n  } catch (error) {\n    const errorMessage = error.response.data.message\n      ? error.response.data.message\n      : \"error happend\"\n    dispatch({\n      type: userTypes.USER_LOGIN_FAIL,\n      payload: errorMessage,\n    })\n    localStorage.setItem(\"userInfo\", null)\n  }\n}\nexport const logout = () => (dispatch) => {\n  dispatch({\n    type: userTypes.LOGOUT,\n  })\n  localStorage.setItem(\"userInfo\", null)\n}\n\nexport const register = (name, email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: userTypes.USER_REGISTER_START,\n    })\n    const { data } = await Axios({\n      method: \"POST\",\n      url: \"/register\",\n      data: {\n        email,\n        password,\n        name,\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    dispatch({\n      type: userTypes.USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem(\"userInfo\", JSON.stringify(data))\n  } catch (error) {\n    const errorMessage = error.response.data.message\n      ? error.response.data.message\n      : \"error happend\"\n    dispatch({\n      type: userTypes.USER_REGISTER_FAIL,\n      payload: errorMessage,\n    })\n    localStorage.setItem(\"userInfo\", null)\n  }\n}\n\n\n\nexport const getUserProfile = () => async (dispatch, getState) => {\n  try {\n\n    const token = getState().userReducer.userInfo.token\n    dispatch({\n      type: userTypes.U,\n    })\n    const { data } = await Axios({\n      method: \"POST\",\n      url: \"/login\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authriztion : `Bearer ${token}`\n      },\n    })\n    dispatch({\n      type: userTypes.USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem(\"userInfo\", JSON.stringify(data))\n  } catch (error) {\n    const errorMessage = error.response.data.message\n      ? error.response.data.message\n      : \"error happend\"\n    dispatch({\n      type: userTypes.USER_LOGIN_FAIL,\n      payload: errorMessage,\n    })\n    localStorage.setItem(\"userInfo\", null)\n  }\n}"]},"metadata":{},"sourceType":"module"}