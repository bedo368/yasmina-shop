{"ast":null,"code":"import Axios from \"axios\";\nimport productsTypes from \"./productsTypes\";\n\nconst fitchProductStart = () => {\n  return {\n    type: productsTypes.FETCH_PRODUCTS_START\n  };\n};\n\nconst fitchProductSuccess = products => {\n  return {\n    type: productsTypes.FETCH_PRODUCTS_SUCCESS,\n    payload: products\n  };\n};\n\nconst fitchProductfail = error => {\n  return {\n    type: productsTypes.FETCH_PRODUCTS_FAIL,\n    payload: error\n  };\n};\n\nexport const fetchProductsAscync = () => {\n  return dispatch => {\n    dispatch(fitchProductStart());\n    const query = `\n     query{\n       getAllProducts {\n         _id\n         name\n         image\n         brand\n         price\n         rating\n         numReviews\n         category\n         description\n         countInStock\n         \n         \n       }\n     }\n     `;\n    Axios({\n      method: \"POST\",\n      data: {\n        query\n      },\n      url: \"/graphql\"\n    }).then(res => {\n      dispatch(fitchProductSuccess(res.data.data.getAllProducts));\n    }).catch(error => {\n      console.log(error.response);\n      const errorMessage = error.response.data.errors ? error.response.data.errors[0].message : error.response.data;\n      dispatch(fitchProductfail(errorMessage));\n    });\n  };\n};\n\nconst removeProductById = ({\n  id\n}) => {};","map":{"version":3,"sources":["/mnt/d/react&bac/mern-shop/frontend/src/redux/products/productsAction.js"],"names":["Axios","productsTypes","fitchProductStart","type","FETCH_PRODUCTS_START","fitchProductSuccess","products","FETCH_PRODUCTS_SUCCESS","payload","fitchProductfail","error","FETCH_PRODUCTS_FAIL","fetchProductsAscync","dispatch","query","method","data","url","then","res","getAllProducts","catch","console","log","response","errorMessage","errors","message","removeProductById","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AACA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEF,aAAa,CAACG;AADf,GAAP;AAGD,CAJD;;AAKA,MAAMC,mBAAmB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACLH,IAAAA,IAAI,EAAEF,aAAa,CAACM,sBADf;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAMA,MAAMG,gBAAgB,GAAIC,KAAD,IAAW;AAClC,SAAO;AACLP,IAAAA,IAAI,EAAEF,aAAa,CAACU,mBADf;AAELH,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAME,mBAAmB,GAAG,MAAM;AACvC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACX,iBAAiB,EAAlB,CAAR;AACA,UAAMY,KAAK,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAjBI;AAkBAd,IAAAA,KAAK,CAAC;AACJe,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,IAAI,EAAE;AACJF,QAAAA;AADI,OAFF;AAKJG,MAAAA,GAAG,EAAE;AALD,KAAD,CAAL,CAOGC,IAPH,CAOSC,GAAD,IAAS;AACbN,MAAAA,QAAQ,CAACR,mBAAmB,CAACc,GAAG,CAACH,IAAJ,CAASA,IAAT,CAAcI,cAAf,CAApB,CAAR;AACD,KATH,EAUGC,KAVH,CAUSX,KAAK,IAAI;AACdY,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACc,QAAlB;AACA,YAAMC,YAAY,GAAGf,KAAK,CAACc,QAAN,CAAeR,IAAf,CAAoBU,MAApB,GAA8BhB,KAAK,CAACc,QAAN,CAAeR,IAAf,CAAoBU,MAApB,CAA2B,CAA3B,EAA8BC,OAA5D,GAAsEjB,KAAK,CAACc,QAAN,CAAeR,IAA1G;AACAH,MAAAA,QAAQ,CAACJ,gBAAgB,CAACgB,YAAD,CAAjB,CAAR;AACD,KAdH;AAeD,GAnCD;AAoCD,CArCM;;AAwCP,MAAMG,iBAAiB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAQ,CAAE,CAApC","sourcesContent":["import Axios from \"axios\"\nimport productsTypes from \"./productsTypes\"\nconst fitchProductStart = () => {\n  return {\n    type: productsTypes.FETCH_PRODUCTS_START,\n  }\n}\nconst fitchProductSuccess = (products) => {\n  return {\n    type: productsTypes.FETCH_PRODUCTS_SUCCESS,\n    payload: products,\n  }\n}\nconst fitchProductfail = (error) => {\n  return {\n    type: productsTypes.FETCH_PRODUCTS_FAIL,\n    payload: error,\n  }\n}\n\nexport const fetchProductsAscync = () => {\n  return (dispatch) => {\n    dispatch(fitchProductStart())\n    const query = `\n     query{\n       getAllProducts {\n         _id\n         name\n         image\n         brand\n         price\n         rating\n         numReviews\n         category\n         description\n         countInStock\n         \n         \n       }\n     }\n     `\n    Axios({\n      method: \"POST\",\n      data: {\n        query,\n      },\n      url: \"/graphql\",\n    })\n      .then((res) => {\n        dispatch(fitchProductSuccess(res.data.data.getAllProducts))\n      })\n      .catch(error => {\n        console.log(error.response );\n        const errorMessage = error.response.data.errors ?  error.response.data.errors[0].message : error.response.data\n        dispatch(fitchProductfail(errorMessage ))\n      })\n  }\n}\n\n\nconst removeProductById = ({id})=>{}"]},"metadata":{},"sourceType":"module"}