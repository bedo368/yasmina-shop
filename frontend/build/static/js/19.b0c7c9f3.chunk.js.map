{"version":3,"sources":["redux/product/productAction.js","pages/CreateProduct/createProduct.js"],"names":["fitchProductfail","error","type","productTypes","FETCH_PRODUCT_FAIL","payload","fetchProductAscync","id","dispatch","FETCH_PRODUCT_START","Axios","method","data","query","variables","url","then","res","product","getProductById","FETCH_PRODUCT_SUCCESS","catch","errorMessage","response","errors","message","createNewProduct","name","brand","image","price","category","description","countInStock","imageUpload","getState","a","token","userReducer","userInfo","config","headers","Authorization","CLEAR_PRODUCT","post","Number","CREATE_NEW_PRODUCT","createProduct","updateProduct","_id","UPDATE_PRODUCT","action","CreateProduct","history","createdProduct","useSelector","state","productReducer","useDispatch","createProductState","loading","useEffect","push","useState","productInfo","changeProductInfo","setimageUplad","uploadFileHandler","e","file","target","files","formData","FormData","append","productInfoOnChange","event","value","preval","className","md","onSubmit","preventDefault","Group","controlId","Label","Control","placeholder","onChange","File","label","custom"],"mappings":"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","file":"static/js/19.b0c7c9f3.chunk.js","sourcesContent":["import Axios from \"axios\"\nimport productTypes from \"./productTypes\"\nconst fitchProductStart = () => {\n  return {\n    type: productTypes.FETCH_PRODUCT_START,\n  }\n}\nconst fitchProductSuccess = (product) => {\n  return {\n    type: productTypes.FETCH_PRODUCT_SUCCESS,\n    payload: product,\n  }\n}\nconst fitchProductfail = (error) => {\n  return {\n    type: productTypes.FETCH_PRODUCT_FAIL,\n    payload: error,\n  }\n}\n\nexport const fetchProductAscync = (id) => {\n  return (dispatch) => {\n    dispatch(fitchProductStart())\n    const query = `\n     query getProductById($id: String!) {\n        getProductById(id : $id) {\n         _id\n         name\n         image\n         brand\n         price\n         rating\n         numReviews\n         category\n         description\n         countInStock\n         \n         \n       }\n     }\n     `\n    Axios({\n      method: \"POST\",\n      data: {\n        query,\n        variables: { id },\n      },\n      url: \"/graphql\",\n    })\n      .then((res) => {\n        dispatch(fitchProductSuccess(res.data.data.getProductById))\n      })\n      .catch((error) => {\n        const errorMessage = error.response.data.errors\n          ? error.response.data.errors[0].message\n          : error.response.data\n\n        dispatch(fitchProductfail(errorMessage))\n      })\n  }\n}\n\nexport const createNewProduct = ({\n  name,\n  image,\n  brand,\n  price,\n  category,\n  description,\n  countInStock,\n  imageUpload,\n}) => async (dispatch, getState) => {\n  const token = getState().userReducer.userInfo.token\n  const config = {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `Bearer ${token}`,\n    },\n  }\n\n  dispatch({ type: productTypes.CLEAR_PRODUCT })\n\n  dispatch({ type: productTypes.FETCH_PRODUCT_START })\n\n  const query = `\n  mutation createProduct($name :String!, $description:String!,$image:String!,$category:String!, $brand:String!,$countInStock:Float!,   $price:Float!) {\n    createProduct( name :$name,  description:$description, image:$image ,category:$category,  brand:$brand, countInStock:$countInStock,    price:$price) {\n      _id\n      name\n      image\n      brand\n      price\n      rating\n      numReviews\n      category\n      description\n      countInStock\n    }\n  }\n  `\n  Axios.post(\"/upload\", imageUpload, config).then((data) => {\n    Axios({\n      method: \"POST\",\n      data: {\n        query,\n        variables: {\n          name,\n          image: data.data,\n          brand,\n          price: Number(price),\n          category,\n          description,\n          countInStock: Number(countInStock),\n        },\n      },\n      url: \"/graphql\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((res) => {\n        dispatch({\n          type: productTypes.CREATE_NEW_PRODUCT,\n          payload: res.data.data.createProduct,\n        })\n      })\n      .then(() => {\n        dispatch({ type: productTypes.CLEAR_PRODUCT })\n      })\n      .catch((error) => {\n        const errorMessage = error.response.data.errors\n          ? error.response.data.errors[0].message\n          : error.response.data\n\n        dispatch(fitchProductfail(errorMessage))\n      })\n  })\n}\n\nexport const updateProduct = ({\n  _id,\n  name,\n  image,\n  brand,\n  price,\n  category,\n  description,\n  countInStock,\n  imageUpload,\n}) => async (dispatch, getState) => {\n  const token = getState().userReducer.userInfo.token\n  const config = {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `Bearer ${token}`,\n    },\n  }\n\n  dispatch({ type: productTypes.CLEAR_PRODUCT })\n\n  dispatch({ type: productTypes.FETCH_PRODUCT_START })\n\n\n  const query = `\n  mutation updateProduct($name :String, $description:String,$image:String,$category:String, $brand:String,$countInStock:Float,   $price:Float , $_id:String!) {\n    updateProduct( _id:$_id ,name :$name,  description:$description, image:$image ,category:$category,  brand:$brand, countInStock:$countInStock,    price:$price) {\n      _id\n      name\n      image\n      brand\n      price\n      rating\n      numReviews\n      category\n      description\n      countInStock\n    }\n  }\n  `\n  Axios({\n    method: \"POST\",\n    data: {\n      query,\n      variables: {\n        _id,\n        name,\n        brand,\n        price: Number(price),\n        category,\n        description,\n        countInStock: Number(countInStock),\n      },\n    },\n    url: \"/graphql\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((res) => {\n        dispatch({\n            type : productTypes.CLEAR_PRODUCT,\n        })\n        dispatch({\n          type : productTypes.UPDATE_PRODUCT,\n          action: res.data.data.updateProduct\n      })\n        \n    })\n    .catch((error) => {\n      const errorMessage = error.response.data.errors\n        ? error.response.data.errors[0].message\n        : error.response.data\n\n      dispatch(fitchProductfail(errorMessage))\n    })\n}\n","import React, { useState, useEffect } from \"react\"\nimport { Button, Col, Form, Row } from \"react-bootstrap\"\nimport Loader from \"../../components/loader/Loader\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport \"./createProduct.scss\"\nimport { createNewProduct } from \"../../redux/product/productAction\"\nconst CreateProduct = ({ history }) => {\n  const createdProduct = useSelector((state) => state.productReducer)\n  const dispatch = useDispatch()\n  const { createProductState, loading } = createdProduct\n\n  useEffect(() => {\n    if (createProductState && !loading) {\n      history.push(`/admin/productslist`)\n    }\n  }, [createProductState, dispatch, loading])\n  const [productInfo, changeProductInfo] = useState({\n    name: \"\",\n    price: \"\",\n    image: \"\",\n    brand: \"\",\n    description: \"\",\n    countInStock: \"\",\n    category: \"\",\n  })\n\n  const [imageUpload, setimageUplad] = useState(null)\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append(\"image\", file)\n    setimageUplad(formData)\n  }\n  const {\n    name,\n    price,\n    image,\n    brand,\n    description,\n    countInStock,\n    category,\n  } = productInfo\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createNewProduct({\n        name,\n        price,\n        image,\n        brand,\n        description,\n        countInStock,\n        category,\n        imageUpload,\n      })\n    )\n  }\n  const productInfoOnChange = (event) => {\n    const { name, value } = event.target\n    changeProductInfo((preval) => {\n      return {\n        ...preval,\n        [name]: value,\n      }\n    })\n  }\n\n  return (\n    <div className=\"create-product\">\n      {loading && <Loader />}\n      <h2>create new product</h2>\n      <section className=\"product-info\">\n        <Row>\n          <Col md={6}>\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter name\"\n                  name=\"name\"\n                  value={name}\n                  onChange={productInfoOnChange}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"price\">\n                <Form.Label>price</Form.Label>\n                <Form.Control\n                  type=\"Number\"\n                  placeholder=\"Enter price\"\n                  name=\"price\"\n                  value={price}\n                  onChange={productInfoOnChange}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"image\">\n                <Form.Label>image</Form.Label>\n                {/* <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter image\"\n                                    name=\"image\"\n                                    value={image}\n                                    onChange={productInfoOnChange}\n                                /> */}\n                <Form.File\n                  label=\"chose file \"\n                  custom\n                  onChange={uploadFileHandler}\n                ></Form.File>\n              </Form.Group>\n              <Form.Group controlId=\"brand\">\n                <Form.Label>brand</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter brand\"\n                  name=\"brand\"\n                  value={brand}\n                  onChange={productInfoOnChange}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"description\">\n                <Form.Label>description</Form.Label>\n                <Form.Control\n                  type=\"description\"\n                  placeholder=\"Enter description\"\n                  name=\"description\"\n                  value={description}\n                  onChange={productInfoOnChange}\n                />\n                <Form.Group controlId=\"category\">\n                  <Form.Label>category</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter category\"\n                    name=\"category\"\n                    value={category}\n                    onChange={productInfoOnChange}\n                  />\n                </Form.Group>\n              </Form.Group>\n              <Form.Group controlId=\"countInStock\">\n                <Form.Label>count In Stuck</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Enter countInStock\"\n                  name=\"countInStock\"\n                  value={countInStock}\n                  onChange={productInfoOnChange}\n                />\n              </Form.Group>\n              <Button type=\"submit\"> Create</Button>\n            </Form>\n          </Col>\n        </Row>\n      </section>\n    </div>\n  )\n}\n\nexport default CreateProduct\n"],"sourceRoot":""}